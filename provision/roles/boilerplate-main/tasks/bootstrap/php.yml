---

- include_vars: "/opt/docker/etc/application.{{ PROVISION_CONTEXT }}.yml"

- name: Fact - php pool on centos
  set_fact:
     php_pool_conf: /etc/php-fpm.d/www.conf
  when: ansible_distribution == 'CentOS'

- name: Fact - php pool on ubuntu
  set_fact:
     php_pool_conf: /etc/php5/fpm/pool.d/www.conf
  when: ansible_distribution == 'Ubuntu'

- name: Configure php-fpm (pool www.conf)
  lineinfile:
    dest:   "{{ php_pool_conf }}"
    regexp: '^{{ item.key }}[\s]*='
    line:   '{{ item.key }} = {{ item.value }}'
  with_items:
   # Process manager
   - { key: 'pm.max_children',            value: '{{ PHP.pm.maxChildren }}' }
   - { key: 'pm.start_servers',           value: '{{ PHP.pm.startServers }}' }
   - { key: 'pm.min_spare_servers',       value: '{{ PHP.pm.minSpareServers }}' }
   - { key: 'pm.max_spare_servers',       value: '{{ PHP.pm.maxSpareServers }}' }
   - { key: 'catch_workers_output',       value: 'yes' }
   # Logs
   - { key: 'access.format',              value: '"{{ PHP.log.accessFormat }}"' }
   - { key: 'access.log',                 value: '/tmp/php.access.log' }
   - { key: 'slowlog',                    value: '/tmp/php.slow.log' }
   - { key: 'request_slowlog_timeout',    value: '{{ PHP.log.slowlogTimeout }}' }
   # PHP flags
   - { key: 'php_admin_value[error_log]', value: '/tmp/php.error.log' }
   - { key: 'php_admin_flag[log_errors]', value: 'on' }

- name: Configure environment variables from APPLICATION_ENVIRONMENT for php-fpm (pool www.conf)
  lineinfile:
    dest:   "{{ php_pool_conf }}"
    regexp: '^env\[{{ item.key }}\][\s]*='
    line:   'env[{{ item.key }}] = "{{ item.value }}"'
  with_dict: "{{ APPLICATION_ENVIRONMENT }}"
  when: APPLICATION_ENVIRONMENT is defined
